-
  Check conditions for creating the document, first main company configuration
-
  !assert {model: res.partner, id: base.main_company}:
    - wh_iva_agent
    - wh_iva_rate
    - vat_subjected
-
  Check partner configuration
-
  !assert {model: res.partner, id: base.res_partner_notsotinysarl0}:
    - wh_iva_agent
    - wh_iva_rate
    - vat_subjected
-
  Check IVA configuration
-
  !assert {model: account.tax, id: l10n_ve_fiscal_requirements.iva_purchase1}:
    - amount
    - type_tax_use == 'purchase'
    - ret
    - wh_vat_collected_account_id
    - wh_vat_paid_account_id
-
  I create a purchase invoice
-
  !record {model: account.invoice, id: test_purchase_iva02}:
    type: out_invoice
    company_id: base.main_company
    date_invoice: !eval time.strftime('%Y-%m-%d')
    partner_id: base.res_partner_notsotinysarl0
    address_contact_id: base.res_partner_address_3
    address_invoice_id: base.res_partner_address_3
    reference_type: none
    journal_id: account.sales_journal
    wh_iva: True
    invoice_line:
      - product_id: product.product_product_pc3
        quantity: 3
        uos_id: product.product_uom_unit
        price_unit: 10
        name: PC3
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_purchase1
      - product_id: product.product_product_pc2
        quantity: 5
        uos_id: product.product_uom_unit
        price_unit: 20
        name: PC2
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_purchase1
-
  I check that Initially customer invoice is in the "Draft" state
-
  !assert {model: account.invoice, id: test_purchase_iva02}:
    - state == 'draft'
-
  I change the state of invoice to "Proforma2" by clicking PRO-FORMA button
-
  !workflow {model: account.invoice, action: invoice_proforma2, ref: test_purchase_iva02}
-
  I check that the invoice state is now "Proforma2"
-
  !assert {model: account.invoice, id: test_purchase_iva02}:
    - state == 'proforma2'
-
  I create invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: test_purchase_iva02}
-
  I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: test_purchase_iva02, string: Invoice is not in open state}:
    - state == 'open'
-
  Set control number for the invoice
-
  !python {model: account.invoice}: |
    self.write(cr, uid, [ref("test_purchase_iva02")], {'nro_ctrl':'iva002', 'journal_id':ref("account.expenses_journal")})
    ai_brw = self.browse(cr, uid, ref("test_purchase_iva02"))
    assert ai_brw.nro_ctrl=='iva002' and ai_brw.journal_id.id == ref("account.expenses_journal"), 'Invoice wasn\'t updated properly'
