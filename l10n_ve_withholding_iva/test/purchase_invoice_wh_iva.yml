-
  1. Checking the partner configuration
-
  1.1. Supplier A is withholding agent
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_1, string: Supplier A is not a withholding agent}:
        - wh_iva_agent
-
  1.2. Supplier B is not withholding agent
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_7, string: Supplier B is a withholding agent}:
        - wh_iva_agent == False
-
  2. Checking taxes configuration
-
  2.1. A withholdeable Tax
-
    !assert {model: account.tax, id: l10n_ve_fiscal_requirements.iva_purchase1, string: The tax is not withholdeable}:
        - ret
-
  2.1. A Non-withholdeable Tax
-
    !assert {model: account.tax, id: l10n_ve_fiscal_requirements.iva_purchase3, string: The tax is withholdeable}:
        - ret == False
-
  3. Setting the context that will be used for the encoding of all the invoices of this file
-
  !context
    'type': 'in_invoice'
-
  4. When the company is a withholding agent
-
  4.1. Set company as withholding agent
-
    !record {model: res.partner, id: base.main_partner}:
        wh_iva_agent: True
-
  4.2. Checking that the Company partner is withholding agent
-
    !assert {model: res.partner, id: base.main_partner, string: The Company is not a withholding agent}:
        - wh_iva_agent
-
  4.3. Case 111 (wh_partner, wh_company, wh_tax)
-
  4.3.1. Creating the invoice
-
    !record {model: account.invoice, id: purchase_invoice_111, view: account.invoice_supplier_form}: &invoice
        nro_ctrl: 111-IVA
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_pay
        company_id: base.main_company
        currency_id: base.EUR
        invoice_line: &invoice_line
          - product_id: product.product_product_4
            quantity: 3
            uos_id: product.product_uom_unit
            price_unit: 3
            name: purchase 111
            account_id: account.a_expense
            invoice_line_tax_id:
            - l10n_ve_fiscal_requirements.iva_purchase1
        journal_id: account.expenses_journal
        reference_type: none
-
  4.3.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_111}
-
  4.3.3 Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_111, string: Invoice is not in Open state}:
        - state == 'open'
-
  4.3.4. Check that withholding document was created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_111"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert wh_iva_id, 'Withholding document was not created'
-
  4.4. Case 110 (wh_partner, wh_company, NO_wh_tax)
-
  4.4.1. Creating the invoice
-
    !record {model: account.invoice, id: purchase_invoice_110, view: account.invoice_supplier_form}:
        nro_ctrl: 110-IVA
        invoice_line:
          - invoice_line_tax_id:
              - l10n_ve_fiscal_requirements.iva_purchase3
            <<: *invoice_line
        <<: *invoice
-
  4.4.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_110}
-
  4.4.2. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_110, string: Invoice is not in Open state}:
        - state == 'open'
-
  4.4.3. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_110"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
-
  4.5. Case 011 (NO_wh_partner, wh_company, wh_tax)
-
  4.5.1. Creating the invoice
-
    !record {model: account.invoice, id: purchase_invoice_011, view: account.invoice_supplier_form}:
        nro_ctrl: 011-IVA
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_7
        <<: *invoice
-
  4.5.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_011}
-
  4.5.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_011, string: Invoice is not in Open state}:
        - state == 'open'
-
  4.5.4. Check that withholding document was created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_011"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert wh_iva_id, 'Withholding document was not created'
-
  4.6. Case 010 (NO_wh_partner, wh_company, NO_wh_tax)
-
  4.6.1. Creating the invoice
-
    !record {model: account.invoice, id: purchase_invoice_010, view: account.invoice_supplier_form}:
        nro_ctrl: 010-IVA
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_7
        invoice_line:
          - invoice_line_tax_id:
              - l10n_ve_fiscal_requirements.iva_purchase3
            <<: *invoice_line
        <<: *invoice
-
  4.6.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_010}
-
  4.6.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_010, string: Invoice is not in Open state}:
        - state == 'open'
-
  4.6.4. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_010"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
-
  5. When the company is not a withholding agent
-
  5.1. Set company as not withholding agent
-
    !record {model: res.partner, id: base.main_partner}:
        wh_iva_agent: False
-
  5.2. Check if the company is not withholding agent
-
    !assert {model: res.partner, id: base.main_partner, string: The Company is a withholding agent}:
        - not wh_iva_agent
-
  5.3. Case 101 (wh_partner, NO wh_company, wh_tax)
-
  5.3.1. Create invoice
-
    !record {model: account.invoice, id: purchase_invoice_101, view: account.invoice_supplier_form}:
        nro_ctrl: 101-IVA
        <<: *invoice
-
  5.3.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_101}
-
  5.3.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_101, string: Invoice is not in Open state}:
        - state == 'open'
-
  5.3.4. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_101"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
-
  5.4. Case 100 (wh_partner, NO wh_company, NO wh_tax)
-
  5.4.1 Create the invoice
-
    !record {model: account.invoice, id: purchase_invoice_100, view: account.invoice_supplier_form}:
        nro_ctrl: 100-IVA
        invoice_line:
          - invoice_line_tax_id:
              - l10n_ve_fiscal_requirements.iva_purchase3
            <<: *invoice_line
        <<: *invoice
-
  5.4.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_100}
-
  5.4.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_100, string: Invoice is not in Open state}:
        - state == 'open'
-
  5.4.4. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_100"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
-
  5.5. Case 001 (NO wh_partner, NO wh_company, wh_tax)
-
  5.5.1. Create the invoice
-
    !record {model: account.invoice, id: purchase_invoice_001, view: account.invoice_supplier_form}:
        nro_ctrl: 001-IVA
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_7
        <<: *invoice
-
  5.5.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_001}
-
  5.5.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_001, string: Invoice is not in Open state}:
        - state == 'open'
-
  5.5.4. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_001"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
-
  5.6. Case 000 (NO wh_partner, NO wh_company, NO wh_tax)
-
  5.6.1. Create the invoice
-
    !record {model: account.invoice, id: purchase_invoice_000, view: account.invoice_supplier_form}:
        nro_ctrl: 000-IVA
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_7
        invoice_line:
          - invoice_line_tax_id:
              - l10n_ve_fiscal_requirements.iva_purchase3
            <<: *invoice_line
        <<: *invoice
-
  5.6.2. Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: purchase_invoice_000}
-
  5.6.3. Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: purchase_invoice_000, string: Invoice is not in Open state}:
        - state == 'open'
-
  5.6.4. Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref("purchase_invoice_000"))
        wh_iva_id = self._fnct_get_wh_iva_id(cr, uid, [inv.id], 'wh_iva_id', [])
        wh_iva_id = wh_iva_id[inv.id]
        assert not wh_iva_id, 'Withholding document should not be created'
