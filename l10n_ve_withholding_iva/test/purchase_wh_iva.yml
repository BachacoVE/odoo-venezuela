-
  4. Check the manual supplier withholding (purchase).
-
  4.1 Configuring the enviroment.
-
  Setting the context for purchase operations in this file.
-
  !context
    'type': 'in_invoice'
-
  Supplier A is withholding agent
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_1, string: Supplier A is not a withholding agent}:
        - wh_iva_agent
-
  Supplier B is not withholding agent
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_7, string: Supplier B is a withholding agent}:
        - wh_iva_agent == False
-
  Tax A is a withholding tax
-
    !assert {model: account.tax, id: l10n_ve_fiscal_requirements.iva_sale1, string: Is not a withholding tax.}:
        - ret
-
  4.2 When the Company is a withholding agent
-
  Set company as withholding agent.
-
    !record {model: res.partner, id: base.main_partner}:
        wh_iva_agent: True
-
  Check that the Company is withholding agent.
-
    !assert {model: res.partner, id: base.main_partner, string: The Company is not a withholding agent}:
        - wh_iva_agent
-
  Create an invoice that will be use in the withholding doc.
-
    !record {model: account.invoice, id: wh_manual_purchase_awi_invoice}: &manual_purchase_awi_invoice
        nro_ctrl: AWI MANUAL PURCHASE INVOICE (WH COMPANY)
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        date_invoice: !eval time.strftime('%Y-%m-%d')
        company_id: base.main_company
        account_id: account.a_sale
        currency_id: base.EUR
        reference_type: none
        invoice_line:
          - product_id: product.product_product_4
            quantity: 3
            uos_id: product.product_uom_unit
            price_unit: 3
            account_id: account.a_sale
            invoice_line_tax_id: &wh_tax
            - l10n_ve_fiscal_requirements.iva_sale1
-
  Check that the invoice's type is purchase (in_invoice).
-
    !assert {model: account.invoice, id: wh_manual_purchase_awi_invoice, string: The invoice is not an in_invoice}:
        - type == 'in_invoice'
-
  Check the invoice's state is draft.
-
    !assert {model: account.invoice, id: wh_manual_purchase_awi_invoice, string: The invoice is not an out_invoice}:
        - state == 'draft'
-
  Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: wh_manual_purchase_awi_invoice}
-
  Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: wh_manual_purchase_awi_invoice, string: Invoice is not in Open state}:
        - state == 'open'
-
  Check that withholding document was created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref('wh_manual_purchase_awi_invoice'))
        assert inv.wh_iva_id, 'Withholding document was not created'
-
  Cancel the automactly created withholding document
-
    !python {model: account.invoice}: |
        import netsvc
        from openerp.osv import osv
        inv_brw = self.browse(cr, uid, ref('wh_manual_purchase_awi_invoice'))
        awi_id = inv_brw.wh_iva_id.id
        wf_service = netsvc.LocalService("workflow")
        wf_service.trg_validate(uid, 'account.wh.iva', awi_id, 'cancel', cr)
        awi_obj = self.pool.get('account.wh.iva')
        awi_brw = awi_obj.browse(cr, uid, awi_id)
        assert awi_brw.state == 'cancel', 'It does not change the withholding state to cancel'
-
  Check that the invoice change or stay in open state.
-
    !assert {model: account.invoice, id: wh_manual_purchase_awi_invoice, string: The invoice is not in open state}:
        - state == 'open'
-
  Create a manual supplier withholding document
-
    !record {model: account.wh.iva, id: whc_awi_manual_purchase}: &whc_awi_manual_purchase
        number: AWI MANUAL PURCHASE (WH COMPANY)
        name: AWI MANUAL PURCHASE (WH COMPANY)
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_recv
        company_id: base.main_company
        currency_id: base.EUR
-
  Check withholding document type.
-
    !assert {model: account.wh.iva, id: whc_awi_manual_purchase, string: The withholding document is not of purchase type (in_invoice)}:
        - type == 'in_invoice'
-
  Check withholding document is in draft state.
-
    !assert {model: account.wh.iva, id: whc_awi_manual_purchase, string: The withholding document is not in draft state.}:
        - state == 'draft'
-
  Search current period and attach to the withholding document.
-
  !python {model: account.wh.iva}: |
    import time
    awi_id = ref('whc_awi_manual_purchase')
    company_id = ref('base.main_company')
    period_obj = self.pool.get('account.period')
    period = period_obj.find(
        cr, uid, time.strftime('%Y/%m/%d'), {'company_id': company_id})
    assert period, 'There aren\'t periods for this date'
    self.write(cr, uid, awi_id, {'period_id':period[0]})
-
  Add a withholding line (invoice) to the withholding iva doc.
-
  !python {model: account.wh.iva}: |
    awi_id = ref('whc_awi_manual_purchase')
    invoice_id = ref('wh_manual_purchase_awi_invoice')
    values = {}
    awi_brw = self.browse(cr, uid, awi_id)
    res = self.onchange_partner_id(
        cr, uid, [awi_id], 'out_invoice', awi_brw.partner_id.id)
    values['wh_lines'] = [
        (0, 0, {'invoice_id': invoice_id,
                'name':'N/A',
                'wh_iva_rate': awi_brw.partner_id.wh_iva_rate})]
    values['account_id'] = res['value']['account_id']
    try:
        self.write(cr, uid, awi_id, values)
        assert False, 'The withholding line was not added'
    except Exception as e:
        pass
-
  I compute the taxes manually with the button at the view.
-
    !function {model: account.wh.iva, name: compute_amount_wh, id: whc_awi_manual_purchase}:
        - model: account.wh.iva
          eval: "[ref('whc_awi_manual_purchase')]"
-
  I confirm the supplier withholding document
-
    !python {model: account.wh.iva}: |
        awi_id = ref('whc_awi_manual_purchase')
        import netsvc
        from openerp.osv import osv
        wf_service = netsvc.LocalService("workflow")
        wf_service.trg_validate(uid, 'account.wh.iva', awi_id, 'wh_iva_confirmed', cr)
        awi_brw = self.browse(cr, uid, awi_id)
        assert awi_brw.state == 'confirmed', 'The withholding document is not in confirmed state'
-
  4.3 When the Company is not a withholding agent
-
  Set company as a non-withholding agent.
-
    !record {model: res.partner, id: base.main_partner}:
        wh_iva_agent: False
-
  Check that the Company is a non-withholding agent.
-
    !assert {model: res.partner, id: base.main_partner, string: The Company is a withholding agent}:
        - not wh_iva_agent
-
  Create an invoice that will be use in the withholding doc.
-
    !record {model: account.invoice, id: nwh_manual_purchase_awi_invoice}:
        nro_ctrl: AWI MANUAL PURCHASE INVOICE (NON-WH COMPANY)
        <<: *manual_purchase_awi_invoice
-
  Check that the invoice's type is purchase (in_invoice).
-
    !assert {model: account.invoice, id: nwh_manual_purchase_awi_invoice, string: The invoice is not an in_invoice}:
        - type == 'in_invoice'
-
  Check the invoice's state is draft.
-
    !assert {model: account.invoice, id: nwh_manual_purchase_awi_invoice, string: The invoice is not an out_invoice}:
        - state == 'draft'
-
  Change invoice to Open state.
-
  !workflow {model: account.invoice, action: invoice_open, ref: nwh_manual_purchase_awi_invoice}
-
  Validate if the invoice is in Open state.
-
    !assert {model: account.invoice, id: nwh_manual_purchase_awi_invoice, string: Invoice is not in Open state}:
        - state == 'open'
-
  Check that withholding document was NOT created
-
    !python {model: account.invoice}: |
        inv = self.browse(cr, uid, ref('nwh_manual_purchase_awi_invoice'))
        assert not inv.wh_iva_id, 'Withholding document was created'
-
  I try to create a manual supplier withholding document. It will not created the document.
-
    !python {model: account.wh.iva}: |
        values = {
            'number': 'AWI MANUAL PURCHASE (NON_WH COMPANY)',
            'name': 'AWI MANUAL PURCHASE (NON-WH COMPANY)',
            'partner_id': ref( 'l10n_ve_fiscal_requirements.f_req_partner_1' ),
            'account_id': ref( 'account.a_recv' ),
            'company_id': ref( 'base.main_company' ),
            'currency_id': ref( 'base.EUR' ),
        }
        try:
            self.create(cr, uid, values)
            assert False, 'The supplier withholding document cant be created because the company is not a withholding agent'
        except Exception as e:
            pass
