-
  2. Test a sale invoice
-
  2.1 I create a sale invoice
-
  !record {model: account.invoice, id: islr_inv02}:
    company_id: base.main_company
    currency_id: base.EUR
    date_invoice: !eval time.strftime('%Y-%m-%d')
    address_contact_id: base.res_partner_address_3
    address_invoice_id: base.res_partner_address_3
    account_id: account.a_recv
    invoice_line:
      - product_id: product.product_product_pc3
        quantity: 5
        uos_id: product.product_uom_unit
        price_unit: 1000
        name: islrprod01
        account_id: account.a_sale
        concept_id: islr_wh_concept_demo2
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_sale1
      - product_id: product.product_product_pc4
        quantity: 5
        uos_id: product.product_uom_unit
        price_unit: 2000
        name: islrprod02
        concept_id: islr_wh_concept_demo2
        account_id: account.a_sale
        invoice_line_tax_id:
        - l10n_ve_fiscal_requirements.iva_sale1
    journal_id: account.sales_journal
    partner_id: base.res_partner_notsotinysarl0
    nro_ctrl: islr456
    reference: isrlref456
    type: out_invoice
-
  2.2 I click on Calculate taxes button
-
  !python {model: account.invoice}: |
    acc_brw=self.browse(cr, uid, ref("islr_inv02"))
    self.button_reset_taxes(cr, uid, [ref("islr_inv02")])
-
  2.3 I update check total before validating the invoice
-
  !record {model: account.invoice, id: islr_inv02}:
    check_total: 16800.0
-
  2.4 I create invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: islr_inv02}
-
  2.5 I create wh document
-
  !python {model: islr.wh.doc}: |
    vals = self.onchange_partner_id(cr, uid, [], 'out_invoice', ref('base.res_partner_notsotinysarl0'))
    vals.update(
         { 'journal_id': ref('withholding_sale_journal'),
           'name': 'test islr sale',
           'currency_id': 1,
           'company_id': ref('base.main_company'),
           'account_id':ref('withholding_sale_journal'),
           'user_id':1,
           'partner_id': ref('base.res_partner_notsotinysarl0'),
           'type': 'out_invoice',
            })
    res = self.create(cr, uid, vals)
    assert res, "Wh documents was not created"
    ai_obj = self.pool.get('account.invoice')
    ai_obj.write(cr, uid, [ref('islr_inv02')], {'islr_wh_doc_id': res})
-
  2.6 check if wh document was asociated wth the invoice (it must be))
-
  !assert {model: account.invoice, id: islr_inv02}:
    - islr_wh_doc_id.id
-
  2.7 I create validate wh document clicking the Progress button
-
  !python {model: account.invoice}: |
    import netsvc
    ai_brw = self.browse(cr, uid, ref('islr_inv02'))
    wf = netsvc.LocalService("workflow")
    wf.trg_validate(uid, 'islr.wh.doc', ai_brw.islr_wh_doc_id.id, 'act_progress', cr)
-
  2.8 Search for the wh lines
-
  !python {model: account.invoice}: |
    import netsvc
    import time
    ai_brw = self.browse(cr, uid, ref("islr_inv02"))
    assert ai_brw.islr_wh_doc_id.amount_total_ret == 750.0, "Bad value for retention amount"
