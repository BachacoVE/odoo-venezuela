-
  2. I check if the supplier income withholding documents are correctly created. Income Withholding document lines corresponds to the concepts and the amount totalization.
-
  2.1 I configure the test enviroment and check data and demo.
-
  I set the context for the purchase operations at this set of cases.
-
  !context
    'type': 'in_invoice'
-
  I check that the company is a income withholding agent and is at Venezuela.
-
    !assert {model: res.partner, id: base.main_partner, string: The companu is a non-withholdable agent}:
       - islr_withholding_agent
       - country_id.code == 'VE'
-
  I check that only one non-withholdable concept is define.
-
    !python {model: islr.wh.concept}: |
       iwc_ids = self.search(cr, uid, [( 'withholdable', '=', False )])
       assert len(iwc_ids) == 1, ( 'Only can be defined one non-withhodeable'
           ' concepts, but %s are defined.' % (len(iwc_ids), ))
-
  I check that all the withholdable concepts have accounts type 'other'
  associtated and also have mandatory income rates.
-
    !python {model: islr.wh.concept}: |
       iwc_ids = self.search(cr, uid, [( 'withholdable', '=', True )])
       for iwc_brw in self.browse(cr, uid, iwc_ids):
            assert iwc_brw.rate_ids, 'All the withholdable concepts need to have rates associated'
            assert iwc_brw.property_retencion_islr_payable, 'All the withholdable concepts need to have an income withholding purchase acc set.'
            assert iwc_brw.property_retencion_islr_payable.type == 'other', 'All the withholdable concepts need to have an income withholding purchase acc of type other.'
            assert iwc_brw.property_retencion_islr_receivable, 'All the withholdable concepts need to have an income withholding sale acc set.'
            assert iwc_brw.property_retencion_islr_receivable.type == 'other', 'All the withholdable concepts need to have an income withholding sale acc of type other.'
-
  I check that the supplier that will be use is income withholdable.
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_1, string: The supplier is not correctly set for this test.}:
       - islr_withholding_agent
       - country_id.code == 'VE'
       - vat
-
  I check that the concept that will be use is withhodable.
-
    !assert {model: islr.wh.concept, id: islr_wh_concept_hprof_no_mercantiles, string: The income concept is not withholdable}:
        - withholdable
-
  I check that the product that will be use have a concept.
-
    !assert {model: product.product, id: product.product_product_4, string: Have not a concept.}:
        - concept_id
-
  2.2 I check that one invoice only creates a single one withholding line.
-
   I create a supplier invoice with a withholdable concept.
-
    !record {model: account.invoice, id: islr_one_iwdi_supplier_invoice, view: account.invoice_supplier_form}: &islr_supplier_ai
        nro_ctrl: ISLR SUPPLIER INVOICE (ONE IWDI)
        supplier_invoice_number: ISLR SUPPLIER INVOICE (ONE IWDI)
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_pay
        company_id: base.main_company
        currency_id: base.EUR
        reference_type: none
        invoice_line: &islr_supplier_wh_ail 
          - product_id: product.product_product_4
            quantity: 3
            uos_id: product.product_uom_unit
            price_unit: 3000
            account_id: account.a_pay
            #concept_id: already in product.
- 
  I check that the invoice was correctly created.
-
    !assert {model: account.invoice, id: islr_one_iwdi_supplier_invoice, string: The invoice was not correctly created}:
        - state == 'draft'
        - type == 'in_invoice'
-
  I confirm the invoice to generate the withholding document.
-
    !workflow {model: account.invoice, action: invoice_open, ref: islr_one_iwdi_supplier_invoice}
-
  I check that the invoice is confirmed and it generate a draft withholding with a single line.
-
    !assert {model: account.invoice, id: islr_one_iwdi_supplier_invoice, string: The invoice was not confirmed or the withholding document was created wrong way.}:
        - state == 'open'
        - islr_wh_doc_id
        - islr_wh_doc_id.state == 'draft'
        - len(islr_wh_doc_id.invoice_ids) == 1
-
  2.3 I check the withholding document invoices grouping by concept, one per concept.
-
  I create an invoice with two invoice lines with the same concept.
-
    !record {model: account.invoice, id: islr_iwdi_sum_supplier_invoice, view: account.invoice_supplier_form}:
        nro_ctrl: ISLR SUPPLIER INVOICE (TWO LINES OF SAME CONCEPT)
        supplier_invoice_number: ISLR SUPPLIER INVOICE (TWO LINES OF SAME CONCEPT)
        invoice_line:
          - price_unit: 3000
            quantity: 1
            <<: *islr_supplier_wh_ail 
          - price_unit: 1000
            quantity: 2
            <<: *islr_supplier_wh_ail 
        <<: *islr_supplier_ai
- 
  I check that the invoice was correctly created.
-
    !assert {model: account.invoice, id: islr_iwdi_sum_supplier_invoice, string: The invoice was not correctly created}:
        - state == 'draft'
        - type == 'in_invoice'
-
  I confirm the invoice.
-
    !workflow {model: account.invoice, action: invoice_open, ref: islr_iwdi_sum_supplier_invoice}
-
  I check that the invoice is confirmed and it genarate a draft income withholding with one withholding document line that correctly takes the base amount and the withheld amount.
-
    !assert {model: account.invoice, id: islr_iwdi_sum_supplier_invoice, string: The invoice was not confirmed or the withholding document was created wrong way.}:
        - state == 'open'
        - islr_wh_doc_id
        - islr_wh_doc_id.state == 'draft'
        - len(islr_wh_doc_id.invoice_ids) == 1
        - islr_wh_doc_id.invoice_ids[0].base_ret == 5000.0
        - islr_wh_doc_id.invoice_ids[0].amount_islr_ret == 250.0
-
  2.4 I check that a withholding concept line is created per invoice concept.
-
  I create an invoice with two invoice lines of different withholdable concepts.
-
    !record {model: account.invoice, id: islr_wline_per_concept_supplier_invoice, view: account.invoice_supplier_form}:
        nro_ctrl: ISLR SUPPLIER INVOICE (TWO DIFF CONCEPTS)
        supplier_invoice_number: ISLR SUPPLIER INVOICE (TWO DIFF CONCEPTS)
        invoice_line:
          - price_unit: 1000
            quantity: 2
            <<: *islr_supplier_wh_ail
          - name: line with another withholdable concept
            quantity: 1
            uos_id: product.product_uom_unit
            price_unit: 500
            account_id: account.a_pay
            concept_id: islr_wh_concept_pago_contratistas
        <<: *islr_supplier_ai
- 
  I check that the invoice was correctly created.
-
    !assert {model: account.invoice, id: islr_wline_per_concept_supplier_invoice, string: The invoice was not correctly created}:
        - state == 'draft'
        - type == 'in_invoice'
-
  I confirm the invoice to generate the withholding document.
-
    !workflow {model: account.invoice, action: invoice_open, ref: islr_wline_per_concept_supplier_invoice}
-
  I check that the invoice is confirmed and it generate a draft withholding with one withholding line an two concept lines.
-
    !assert {model: account.invoice, id: islr_wline_per_concept_supplier_invoice, string: The invoice was not confirmed or the withholding document was created wrong way.}:
        - state == 'open'
        - islr_wh_doc_id
        - islr_wh_doc_id.state == 'draft'
        - len(islr_wh_doc_id.invoice_ids) == 1
        - len(islr_wh_doc_id.concept_ids) == 2
