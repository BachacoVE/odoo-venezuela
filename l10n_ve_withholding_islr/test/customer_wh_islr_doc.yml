-
  3. I check the customer income withholding documents (Sale).
-
  3.1 I configure the test enviroment and check data and demo.
-
  I set the context for the purchase operations at this set of cases.
-
  !context
    'type': 'out_invoice'
-
  I check that only one non-withholdable concept is define.
-
    !python {model: islr.wh.concept}: |
       iwc_ids = self.search(cr, uid, [( 'withholdable', '=', False )])
       assert len(iwc_ids) == 1, ( 'Only can be defined one non-withhodeable'
           ' concepts, but %s are defined.' % (len(iwc_ids), ))
-
  I check that all the withholdable concepts have accounts type 'other' associtated and also have mandatory income rates.
-
    !python {model: islr.wh.concept}: |
       iwc_ids = self.search(cr, uid, [( 'withholdable', '=', True )])
       for iwc_brw in self.browse(cr, uid, iwc_ids):
            assert iwc_brw.rate_ids, 'All the withholdable concepts need to have rates associated'
            assert iwc_brw.property_retencion_islr_payable, 'All the withholdable concepts need to have an income withholding purchase acc set.'
            assert iwc_brw.property_retencion_islr_payable.type == 'other', 'All the withholdable concepts need to have an income withholding purchase acc of type other.'
            assert iwc_brw.property_retencion_islr_receivable, 'All the withholdable concepts need to have an income withholding sale acc set.'
            assert iwc_brw.property_retencion_islr_receivable.type == 'other', 'All the withholdable concepts need to have an income withholding sale acc of type other.'

-
  I check that the concept that will be use is withhodable.
-
    !assert {model: islr.wh.concept, id: islr_wh_concept_hprof_no_mercantiles, string: The income concept is not withholdable}:
        - withholdable
-
  I check that the product that will be use have a concept.
-
    !assert {model: product.product, id: product.product_product_4, string: Have not a concept.}:
        - concept_id.id == ref( 'islr_wh_concept_hprof_no_mercantiles' )
-
  I check that the customer that will be use is an income withholding agent and is at Venezuela.
-
    !assert {model: res.partner, id: l10n_ve_fiscal_requirements.f_req_partner_1, string: The customer is not correctly set for this test.}:
       - islr_withholding_agent
       - country_id.code == 'VE'
       - vat
-
  I check if the account that will be use is of receivable type.
-
    !assert {model: account.account, id: account.a_recv, string: The account is not of receivable type}:
        - type == 'receivable'
-
  3.2 I check that an customer invoice confirmation will not automatic create a withholding document.
-
  I create a customer invoice with a withholdable concept (in the product).
-
    !record {model: account.invoice, id: islr_customer_invoice, view: account.invoice_form}: &customer_ai
        nro_ctrl: ISLR CUSTOMER INVOICE ()
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_recv
        company_id: base.main_company
        currency_id: base.EUR
        invoice_line: &customer_ail
          - product_id: product.product_product_4
            quantity: 3
            uos_id: product.product_uom_unit
            price_unit: 1000
            account_id: account.a_recv
-
  I check that the invoices was correctly created.
-
    !assert {model: account.invoice, id: islr_customer_invoice, string: The invoices was no correctly created}:
        - state == 'draft'
        - type == 'out_invoice'
-
  I confirm the invoice.
-
    !workflow {model: account.invoice, action: invoice_open, ref: islr_customer_invoice}
-
  I check that the invoice is confirmed and not generate a withholding doc.
-
    !assert {model: account.invoice, id: islr_customer_invoice, string: The invoice was not correctly confirmed.}:
        - state == 'open'
        - not islr_wh_doc_id
-
  3.3 I check that a withholding document can be created manually when the customer is a withholding agent.
-
  I create a withholding document manually.
-
    !record {model: islr.wh.doc, id: islr_customer_wh_doc, view: l10n_ve_withholding_islr.view_islr_form_customers}:
        name: ISLR WH DOC (CUSTOMER MANUALLY)
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_recv
-
  I unlink the auto-loaded invoices.
-
    !python {model: islr.wh.doc}: | 
        iwd_id = ref( 'islr_customer_wh_doc' )
        iwd_brw = self.browse(cr, uid, iwd_id)
        iwdi_ids = [inv_line.id
                    for inv_line in iwd_brw.invoice_ids]
        self.pool.get( 'islr.wh.doc.invoices' ).unlink(cr, uid, iwdi_ids) 
-
  I check that the withholding document is withhout invoices.
-
    !assert {model: islr.wh.doc, id: islr_customer_wh_doc, string: The withholding document should be without invoices}:
        - not invoice_ids
-
  I create a customer invoice.
-
    !record {model: account.invoice, id: islr_manual_wh_customer_invoice, view: account.invoice_form}:
        nro_ctrl: ISLR CUSTOMER INVOICE (MANUAL WH)
        <<: *customer_ai
-
  I confirm the invoice.
-
    !workflow {model: account.invoice, action: invoice_open, ref: islr_manual_wh_customer_invoice}
-
  I add the invoice to the withholding document.
-
    !record {model: islr.wh.doc, id: islr_customer_wh_doc, view: l10n_ve_withholding_islr.view_islr_form_customers}:
        invoice_ids: 
            - invoice_id: islr_manual_wh_customer_invoice
-
  I compute the taxes manually with the button 'Compute Icome Withholding'.
-
    !function {model: islr.wh.doc, name: compute_amount_wh, id: islr_customer_wh_doc}:
        - model: islr.wh.doc
          eval: "[ref('islr_customer_wh_doc')]"
-
  I confirm the withholding document.  
-
    !python {model: islr.wh.doc}: | 
        iwd_id = ref( 'islr_customer_wh_doc' ) 
        import netsvc
        from openerp.osv import osv
        wf_service = netsvc.LocalService( 'workflow' )
        wf_service.trg_validate(uid, 'islr.wh.doc', iwd_id, 'act_confirm', cr)
-
  I check that the withholding document is confirmed.
-
    !assert {model: islr.wh.doc, id: islr_customer_wh_doc}:
        - state == 'confirmed'
-
  3.4 I check that a manually created withholding document can not be confirmed if it is withhout withholding lines.
-
  I create a withholding document manually.
-
    !record {model: islr.wh.doc, id: islr_no_lines_customer_wh_doc}:
        name: ISLR WH DOC (NOT WH LINES)
        partner_id: l10n_ve_fiscal_requirements.f_req_partner_1
        account_id: account.a_recv
-
  I unlink the auto-loaded invoices.
-
    !python {model: islr.wh.doc}: | 
        iwd_id = ref( 'islr_no_lines_customer_wh_doc' )
        iwd_brw = self.browse(cr, uid, iwd_id)
        iwdi_ids = [inv_line.id
                    for inv_line in iwd_brw.invoice_ids]
        self.pool.get( 'islr.wh.doc.invoices' ).unlink(cr, uid, iwdi_ids) 
-
  I check that the withholding document is withhout invoices.
-
    !assert {model: islr.wh.doc, id: islr_no_lines_customer_wh_doc, string: The withholding document should be without invoices}:
        - invoice_ids == []
-
  I try to confirm the withholding document.
-
    !python {model: islr.wh.doc}: | 
        iwd_id = ref( 'islr_no_lines_customer_wh_doc' ) 
        # the workflow is not used because the exception can be manage
        try:
            self.check_income_wh(cr, uid, iwd_id)
            assert False, 'The withholding can not be confirm'
        except Exception as e:
            pass
